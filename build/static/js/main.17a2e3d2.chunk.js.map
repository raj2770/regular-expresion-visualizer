{"version":3,"sources":["componenets/grpah/BasicFlow.js","componenets/grpah/Checker.js","componenets/header/header.js","pages/index.js","pages/about/AboutStyles.jsx","pages/about/About.jsx","componenets/navbar/Navbar.js","App.js","index.js"],"names":["BasicFlow","props","Nst","a","e","f","this","nfa","nfa_size","st","insert_concat","regexp","c","c2","ret","i","length","priority","regexp_to_postfix","postfix","op","push","pop","character","init_nfa_state","0","1","union_","d","b","concatenation","kleene_star","Dst","console","log","dfa","epsilon_closure","state","si","has","add","state_change","temp","Set","item","j","isSetsEqual","size","every","value","checkSameObjKey","map","key","keys","mapkey","get","entries","position","x","y","res","regex","postfix_to_nfa","final_state","start_state","que","mp","Map","JSON","parse","stringify","set","temp1","temp2","ct","clear","p","f1","init_dfa_state","stat","shift","nfa_to_dfa","grp","Array","part","chk","strt","trans","k","sort","m","splice","final","minimize_dfa","getDfa","dfa1","starting_state","initialElements","count","forEach","el","node1","id","data","label","style","border","width","height","paddingTop","fontSize","borderRadius","paddingLeft","color","addNode","edge1","source","target","type","arrowHeadType","animated","edge2","addEdge","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","layoutedElements","elements","direction","isHorizontal","setGraph","rankdir","isNode","setNode","setEdge","layout","nodeWithPosition","node","targetPosition","sourcePosition","nodeWidth","Math","random","nodeHeight","getLayoutedElements","background","Checker","result","input","curr_state","g","stringcheck","string","padding","margin","Header","className","Home","useState","setRegex","setString","displayQuestions","setdisplayQuestions","setdisplayString","setResult","graph","onSubmit","evt","preventDefault","onChange","class","AboutStyles","makeStyles","theme","title","textAlign","subTitle","fontWeight","subTitleSmall","picSpacing","display","alignItems","profilePic","transition","boxShadow","skills","button","marginRight","textTransform","backgroundColor","buttonMobile","links","textDecoration","About","classes","Grid","container","xs","Typography","variant","md","paddingBottom","Divider","rel","contact","href","NavBar","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","Link","paddingRight","App","exact","path","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.17a2e3d2.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactFlow, { isNode } from \"react-flow-renderer\";\nimport dagre from \"dagre\";\nconst BasicFlow = (props) => {\n  function Nst(a, e, f) {\n    this.a = a;\n    this.e = e;\n    this.f = f;\n  }\n\n  let nfa = [];\n  let nfa_size = 0;\n  let st = [];\n  function insert_concat(regexp) {\n    let ret = \"\";\n    let c, c2;\n    for (let i = 0; i < regexp.length; i++) {\n      c = regexp[i];\n      if (i + 1 < regexp.length) {\n        c2 = regexp[i + 1];\n        ret += c;\n        if (c !== \"(\" && c2 !== \")\" && c !== \"+\" && c2 !== \"+\" && c2 !== \"*\") {\n          ret += \".\";\n        }\n      }\n    }\n    ret += regexp[regexp.length - 1];\n    return ret;\n  }\n  console.log(insert_concat(\"110*+11\"));\n  /*----------------------------------------------------------------------------------------------*/\n\n  function priority(c) {\n    switch (c) {\n      case \"*\":\n        return 3;\n      case \".\":\n        return 2;\n      case \"+\":\n        return 1;\n      default:\n        return 0;\n    }\n  }\n  function regexp_to_postfix(regexp) {\n    let postfix = \"\";\n    var op = [];\n    let c;\n    for (let i = 0; i < regexp.length; i++) {\n      switch (regexp[i]) {\n        case \"0\":\n        case \"1\":\n          postfix += regexp[i];\n          break;\n        case \"(\":\n          op.push(regexp[i]);\n          break;\n        case \")\":\n          while (op[op.length - 1] !== \"(\") {\n            postfix += op[op.length - 1];\n            op.pop();\n          }\n          op.pop();\n          break;\n        default:\n          while (op.length !== 0) \n          {\n            c = op[op.length - 1];\n            if (priority(c) >= priority(regexp[i])) {\n              postfix += op[op.length - 1];\n              op.pop();\n            } \n            else break;\n          }\n          op.push(regexp[i]);\n      }\n      //cout<<regexp[i]<<' '<<postfix<<endl;\n    }\n    while (op.length !== 0) {\n      postfix += op[op.length - 1];\n      op.pop();\n    }\n    return postfix;\n  }\n  console.log(regexp_to_postfix(insert_concat(\"110*+11\")));\n  /*---------------------------------------------------------------*/\n  function character(i) {\n    let init_nfa_state = new Nst(\n      {\n        0: [],\n        1: []\n      },\n      [],\n      0\n    );\n    nfa.push(init_nfa_state);\n    init_nfa_state = new Nst(\n      {\n        0: [],\n        1: []\n      },\n      [],\n      0\n    );\n    nfa.push(init_nfa_state);\n\n    nfa[nfa_size].a[i].push(nfa_size + 1);\n    st.push(nfa_size);\n    nfa_size++;\n    st.push(nfa_size);\n    nfa_size++;\n  }\n  function union_() {\n    let init_nfa_state = new Nst(\n      {\n        0: [],\n        1: []\n      },\n      [],\n      0\n    );\n    nfa.push(init_nfa_state);\n    init_nfa_state = new Nst(\n      {\n        0: [],\n        1: []\n      },\n      [],\n      0\n    );\n    nfa.push(init_nfa_state);\n    let d = st[st.length - 1];\n    st.pop();\n    let c = st[st.length - 1];\n    st.pop();\n    let b = st[st.length - 1];\n    st.pop();\n    let a = st[st.length - 1];\n    st.pop();\n    nfa[nfa_size].e.push(a);\n    nfa[nfa_size].e.push(c);\n    nfa[b].e.push(nfa_size + 1);\n    nfa[d].e.push(nfa_size + 1);\n    st.push(nfa_size);\n    nfa_size++;\n    st.push(nfa_size);\n    nfa_size++;\n  }\n  function concatenation() {\n    let d = st[st.length - 1];\n    st.pop();\n    let c = st[st.length - 1];\n    st.pop();\n    let b = st[st.length - 1];\n    st.pop();\n    let a = st[st.length - 1];\n    st.pop();\n    nfa[b].e.push(c);\n    st.push(a);\n    st.push(d);\n  }\n\n  function kleene_star() {\n    let init_nfa_state = new Nst(\n      {\n        0: [],\n        1: []\n      },\n      [],\n      0\n    );\n    nfa.push(init_nfa_state);\n    init_nfa_state = new Nst(\n      {\n        0: [],\n        1: []\n      },\n      [],\n      0\n    );\n    nfa.push(init_nfa_state);\n    let b = st[st.length - 1];\n    st.pop();\n    let a = st[st.length - 1];\n    st.pop();\n    nfa[nfa_size].e.push(a);\n    nfa[nfa_size].e.push(nfa_size + 1);\n    nfa[b].e.push(a);\n    nfa[b].e.push(nfa_size + 1);\n    st.push(nfa_size);\n    nfa_size++;\n    st.push(nfa_size);\n    nfa_size++;\n  }\n  function postfix_to_nfa(postfix) {\n    for (let i = 0; i < postfix.length; i++) {\n      switch (postfix[i]) {\n        case \"0\":\n        case \"1\":\n          character(postfix[i] - \"0\");\n          break;\n        case \"*\":\n          kleene_star();\n          break;\n        case \".\":\n          concatenation();\n          break;\n        case \"+\":\n          union_();\n          break;\n        default:\n      }\n    }\n  }\n\n  function Dst(a, f) {\n    this.a = a;\n    this.f = f;\n  }\n  let dfa = [];\n\n  function epsilon_closure(state, si) {\n    for (let i = 0; i < nfa[state].e.length; i++) {\n      if (si.has(nfa[state].e[i]) === false) {\n        si.add(nfa[state].e[i]);\n        epsilon_closure(nfa[state].e[i], si);\n      }\n    }\n  }\n\n  function state_change(c, si) {\n    const temp = new Set();\n    // console.log(si);\n    if (c === 1) {\n      for (let item of si) {\n        for (let j = 0; j < nfa[item].a[0].length; j++) {\n          temp.add(nfa[item].a[0][j]);\n        }\n      }\n    } else {\n      for (let item of si) {\n        for (let j = 0; j < nfa[item].a[1].length; j++) {\n          temp.add(nfa[item].a[1][j]);\n        }\n      }\n    }\n    return temp;\n  }\n\n  let isSetsEqual = (a, b) =>\n    a.size === b.size && [...a].every((value) => b.has(value));\n  function checkSameObjKey(map, key) {\n    for (let mapkey of map.keys()) {\n      if (isSetsEqual(mapkey, key)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  function get(map, key) {\n    for (let [mapkey, value] of map.entries()) {\n      if (isSetsEqual(mapkey, key)) {\n        return value;\n      }\n    }\n  }\n  function nfa_to_dfa(si, que, start_state) {\n    let mp = new Map();\n    let temp = new Set(JSON.parse(JSON.stringify([...si])));\n    mp.set(temp, -1);\n    let temp1 = new Set();\n    let temp2 = new Set();\n    let ct = 0;\n    si.clear();\n    si.add(0);\n    // console.log(si);\n    epsilon_closure(start_state, si);\n    // console.log(si);\n    // console.log(temp);\n    if (checkSameObjKey(mp, si) === false) {\n      // console.log(\"raj\");\n      mp.set(si, ct++);\n      que.push(si);\n    }\n    // console.log(mp);\n    let p = 0;\n    let f1 = false;\n\n    // console.log(que.size());\n    let flag = 8;\n    while (que.length !== 0) {\n      let init_dfa_state = new Dst([-1, -1], false);\n      dfa.push(init_dfa_state);\n      // si.empty();\n\n      si = new Set(JSON.parse(JSON.stringify([...que[0]])));\n      f1 = false;\n      for (let item of si) {\n        if (nfa[item].f === 1) f1 = true;\n      }\n      dfa[p].f = f1;\n      // console.log(state_change(1,si));\n      temp1 = new Set(JSON.parse(JSON.stringify([...state_change(1, si)])));\n      // console.log(temp1);\n      si = new Set(JSON.parse(JSON.stringify([...temp1])));\n      // console.log(si);\n      for (let item of si) {\n        epsilon_closure(item, si);\n      }\n      // if(mp.has(si)==false&&si.size!==0)\n      if (checkSameObjKey(mp, si) === false) {\n        // mp[si]=ct++;\n        mp.set(si, ct++);\n        que.push(si);\n        dfa[p].a[0] = ct - 1;\n      } else {\n        let stat = get(mp, si);\n        // console.log(\"rajuvava\");\n        // console.log(stat);\n        dfa[p].a[0] = stat;\n      }\n      temp1.clear();\n\n      si = new Set(JSON.parse(JSON.stringify([...que[0]])));\n      temp2 = new Set(JSON.parse(JSON.stringify([...state_change(2, si)])));\n      si = new Set(JSON.parse(JSON.stringify([...temp2])));\n      for (let item of si) {\n        epsilon_closure(item, si);\n      }\n      if (checkSameObjKey(mp, si) === false) {\n        // mp[si]=ct++;\n        mp.set(si, ct++);\n        que.push(si);\n        dfa[p].a[1] = ct - 1;\n      } else {\n        let stat = get(mp, si);\n        dfa[p].a[1] = stat;\n      }\n      temp2.clear();\n      que.shift();\n\n      flag--;\n      p++;\n    }\n    for (let i = 0; i < p; i++) {\n      if (dfa[i].a[0] === -1) dfa[i].a[0] = p;\n      if (dfa[i].a[1] === -1) dfa[i].a[1] = p;\n    }\n    let init_dfa_state = new Dst([-1, -1], false);\n    dfa.push(init_dfa_state);\n    dfa[p].a[0] = p;\n    dfa[p].a[1] = p;\n  }\n  /*minimization of dfa-------------------------------------------------------------*/\n\n  function minimize_dfa(dfa) {\n    //cout<<dfa.size()<<endl;\n    let grp = [...Array(dfa.length)]; /// Group number for states\n    // vector<vector<int> > part(2, vector<int>());   /// Partition for groups\n    let part = [[], []];\n\n    /// Initializing the groups\n    part[0].push(0);\n    for (let i = 1; i < grp.length; i++) {\n      if (dfa[i].f === dfa[0].f) {\n        grp[i] = 0;\n        part[0].push(i);\n      } else {\n        grp[i] = 1;\n        part[1].push(i);\n      }\n    }\n\n    // if(!part[1].legth) part.erase(part.end());\n\n    /// Loop until no new partition is created\n    let chk = true; /// Check if any new partition is created\n    let strt = 0; /// Starting State\n    while (chk) {\n      chk = false;\n\n      /*for(int i=0; i<part.size(); i++) {\n              cout<<i<<\":\";\n              for(int j=0; j<part[i].size(); j++) {\n                  cout<<part[i][j]<<\" \";\n              } cout<<endl;\n          } cout<<endl;*/\n      /// Iterate over partitions and alphabets\n\n      for (let i = 0; i < part.length; i++) {\n        for (let j = 0; j < 2; j++) {\n          // vector<pair<int,int> > trans(part[i].size());   /// Transitions for the states of partitions\n          let trans = [...Array(part[i].length)];\n          /// Iterate over states of partitions and find transition groups\n\n          for (let k = 0; k < part[i].length; k++) {\n            if (dfa[part[i][k]].a[j] >= 0)\n              trans[k] = [grp[dfa[part[i][k]].a[j]], part[i][k]];\n            else trans[k] = [-1, part[i][k]];\n          }\n\n          trans.sort(function (a, b) {\n            return a[0] - b[0];\n          });\n\n          /// Break partition in case of different transitions\n          if (trans[0][0] !== trans[trans.length - 1][0]) {\n            chk = true;\n\n            let k;\n            let m = part.length - 1;\n\n            part[i].splice(0, part[i].length);\n\n            part[i].push(trans[0][1]);\n            for (\n              k = 1;\n              k < trans.length && trans[k][0] === trans[k - 1][0];\n              k++\n            ) {\n              part[i].push(trans[k][1]);\n            }\n\n            while (k < trans.length) {\n              if (trans[k][0] !== trans[k - 1][0]) {\n                part.push([]);\n                m++;\n              }\n              grp[trans[k][1]] = m;\n              part[m].push(trans[k][1]);\n              k++;\n            }\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < part.length; i++) {\n      for (let j = 0; j < part[i].length; j++) {\n        if (part[i][j] === 0) strt = i;\n      }\n    }\n\n    // vector<tuple<int,int,bool> > ret(part.size());\n    let ret = [...Array(part.length)];\n    for (let i = 0; i < part.length; i++) {\n      //cout<<grp[part[i][0]]<<endl;\n      let astate = dfa[part[i][0]].a[0] >= 0 ? grp[dfa[part[i][0]].a[0]] : -1;\n      let bstate = dfa[part[i][0]].a[1] >= 0 ? grp[dfa[part[i][0]].a[1]] : -1;\n      let fstate = dfa[part[i][0]].f;\n      let temp = {\n        a: astate,\n        b: bstate,\n        final: fstate\n      };\n      ret[i] = temp;\n    }\n\n    return [strt, ret];\n  }\n  let getDfa = function (regex) {\n    postfix_to_nfa(regexp_to_postfix(insert_concat(regex)));\n\n    let final_state = st[st.length - 1];\n    st.pop();\n    let start_state = st[st.length - 1];\n    st.pop();\n    nfa[final_state].f = 1;\n    let si = new Set();\n    let que = [];\n    nfa_to_dfa(si, que, start_state);\n    console.log(dfa);\n    let ret = minimize_dfa(dfa);\n    return ret;\n  };\n  const position = { x: 0, y: 0 };\n  const res = getDfa(props.regex);\n  console.log(res);\n  const dfa1 = res[1];\n  const starting_state=res[0];\n  let initialElements = [];\n  let addNode = function (dfa) {\n    let count = 0;\n    dfa.forEach((el) => {\n      let i = count;\n      let node1 = {\n        id: `${i}`,\n        data: { label: \"q\" + count },\n        style: {\n          border: \"1px solid blue\",\n          width: 45,\n          height: 40,\n          paddingTop: 0,\n          fontSize: 15,\n          borderRadius: 20\n        },\n        position: position\n      };\n      if(count===starting_state)\n      {  \n        node1.style = {\n          border: \"1px solid yellow\",\n          paddingTop: 2,\n          paddingLeft:1,\n          width: 45,\n          height: 40,\n          borderRadius: 20,\n          fontSize: 8\n        };\n        node1.data = { label: \"q\" + count + \" start_state\" };\n      }\n      if (el.final === true) {\n        node1.style = {\n          border: \"1px solid green\",\n          paddingTop: 2,\n          width: 45,\n          height: 40,\n          color: \"blue\",\n          borderRadius: 20,\n          fontSize: 8\n        };\n        node1.data = { label: \"q\" + count + \" finalstate\" };\n      }\n      initialElements.push(node1);\n      count++;\n    });\n  };\n  let addEdge = function (dfa) {\n    let count = 0;\n    let id = dfa.length;\n    dfa.forEach((el) => {\n      let edge1 = {\n        id: id++,\n        source: count,\n        target: el.a,\n        type: \"custom\",\n        label: \"0\",\n        arrowHeadType: \"arrowclosed\",\n        animated: true\n      };\n      let edge2 = {\n        id: id++,\n        source: count,\n        target: el.b,\n        type: \"custom\",\n        label: \"1\",\n        arrowHeadType: \"arrowclosed\",\n        animated: true\n      };\n      initialElements.push(edge1);\n      initialElements.push(edge2);\n      count++;\n    });\n  };\n  addNode(dfa1);\n  addEdge(dfa1);\n  const nodeWidth = 80;\n  const nodeHeight = 26;\n  const dagreGraph = new dagre.graphlib.Graph();\n  dagreGraph.setDefaultEdgeLabel(() => ({}));\n  console.log(\"raj\");\n  const getLayoutedElements = (elements, direction = \"LR\") => {\n    const isHorizontal = direction === \"LR\";\n    dagreGraph.setGraph({ rankdir: direction });\n\n    elements.forEach((el) => {\n      if (isNode(el)) {\n        dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\n      } else {\n        dagreGraph.setEdge(el.source, el.target);\n      }\n    });\n\n    dagre.layout(dagreGraph);\n\n    return elements.map((el) => {\n      if (isNode(el)) {\n        const nodeWithPosition = dagreGraph.node(el.id);\n        el.targetPosition = isHorizontal ? \"left\" : \"top\";\n        el.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\n\n        // unfortunately we need this little hack to pass a slightly different position\n        // to notify react flow about the change. Moreover we are shifting the dagre node position\n        // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\n        el.position = {\n          x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\n          y: nodeWithPosition.y - nodeHeight / 2\n        };\n      }\n\n      return el;\n    });\n  };\n  const layoutedElements = getLayoutedElements(initialElements);\n  const style = {\n    background: '#8f79f5',\n    width: '100%',\n    height: 500,\n  };\n  \n  return (\n    <div >\n      <ReactFlow elements={layoutedElements}  style={style} />\n    </div>\n  );\n};\nexport default BasicFlow;\n","import React from \"react\";\r\nconst Checker = (props) => {\r\n    function Nst(a, e, f) {\r\n      this.a = a;\r\n      this.e = e;\r\n      this.f = f;\r\n    }\r\n  \r\n    let nfa = [];\r\n    let nfa_size = 0;\r\n    let st = [];\r\n    function insert_concat(regexp) {\r\n      let ret = \"\";\r\n      let c, c2;\r\n      for (let i = 0; i < regexp.length; i++) {\r\n        c = regexp[i];\r\n        if (i + 1 < regexp.length) {\r\n          c2 = regexp[i + 1];\r\n          ret += c;\r\n          if (c !== \"(\" && c2 !== \")\" && c !== \"+\" && c2 !== \"+\" && c2 !== \"*\") {\r\n            ret += \".\";\r\n          }\r\n        }\r\n      }\r\n      ret += regexp[regexp.length - 1];\r\n      return ret;\r\n    }\r\n    console.log(insert_concat(\"110*+11\"));\r\n    /*----------------------------------------------------------------------------------------------*/\r\n  \r\n    function priority(c) {\r\n      switch (c) {\r\n        case \"*\":\r\n          return 3;\r\n        case \".\":\r\n          return 2;\r\n        case \"+\":\r\n          return 1;\r\n        default:\r\n          return 0;\r\n      }\r\n    }\r\n    function regexp_to_postfix(regexp) {\r\n      let postfix = \"\";\r\n      var op = [];\r\n      let c;\r\n      for (let i = 0; i < regexp.length; i++) {\r\n        switch (regexp[i]) {\r\n          case \"0\":\r\n          case \"1\":\r\n            postfix += regexp[i];\r\n            break;\r\n          case \"(\":\r\n            op.push(regexp[i]);\r\n            break;\r\n          case \")\":\r\n            while (op[op.length - 1] !== \"(\") {\r\n              postfix += op[op.length - 1];\r\n              op.pop();\r\n            }\r\n            op.pop();\r\n            break;\r\n          default:\r\n            while (op.length !== 0) {\r\n              c = op[op.length - 1];\r\n              if (priority(c) >= priority(regexp[i])) {\r\n                postfix += op[op.length - 1];\r\n                op.pop();\r\n              } else break;\r\n            }\r\n            op.push(regexp[i]);\r\n        }\r\n        //cout<<regexp[i]<<' '<<postfix<<endl;\r\n      }\r\n      while (op.length !== 0) {\r\n        postfix += op[op.length - 1];\r\n        op.pop();\r\n      }\r\n      return postfix;\r\n    }\r\n    console.log(regexp_to_postfix(insert_concat(\"110*+11\")));\r\n    /*---------------------------------------------------------------*/\r\n    function character(i) {\r\n      let init_nfa_state = new Nst(\r\n        {\r\n          0: [],\r\n          1: []\r\n        },\r\n        [],\r\n        0\r\n      );\r\n      nfa.push(init_nfa_state);\r\n      init_nfa_state = new Nst(\r\n        {\r\n          0: [],\r\n          1: []\r\n        },\r\n        [],\r\n        0\r\n      );\r\n      nfa.push(init_nfa_state);\r\n  \r\n      nfa[nfa_size].a[i].push(nfa_size + 1);\r\n      st.push(nfa_size);\r\n      nfa_size++;\r\n      st.push(nfa_size);\r\n      nfa_size++;\r\n    }\r\n    function union_() {\r\n      let init_nfa_state = new Nst(\r\n        {\r\n          0: [],\r\n          1: []\r\n        },\r\n        [],\r\n        0\r\n      );\r\n      nfa.push(init_nfa_state);\r\n      init_nfa_state = new Nst(\r\n        {\r\n          0: [],\r\n          1: []\r\n        },\r\n        [],\r\n        0\r\n      );\r\n      nfa.push(init_nfa_state);\r\n      let d = st[st.length - 1];\r\n      st.pop();\r\n      let c = st[st.length - 1];\r\n      st.pop();\r\n      let b = st[st.length - 1];\r\n      st.pop();\r\n      let a = st[st.length - 1];\r\n      st.pop();\r\n      nfa[nfa_size].e.push(a);\r\n      nfa[nfa_size].e.push(c);\r\n      nfa[b].e.push(nfa_size + 1);\r\n      nfa[d].e.push(nfa_size + 1);\r\n      st.push(nfa_size);\r\n      nfa_size++;\r\n      st.push(nfa_size);\r\n      nfa_size++;\r\n    }\r\n    function concatenation() {\r\n      let d = st[st.length - 1];\r\n      st.pop();\r\n      let c = st[st.length - 1];\r\n      st.pop();\r\n      let b = st[st.length - 1];\r\n      st.pop();\r\n      let a = st[st.length - 1];\r\n      st.pop();\r\n      nfa[b].e.push(c);\r\n      st.push(a);\r\n      st.push(d);\r\n    }\r\n  \r\n    function kleene_star() {\r\n      let init_nfa_state = new Nst(\r\n        {\r\n          0: [],\r\n          1: []\r\n        },\r\n        [],\r\n        0\r\n      );\r\n      nfa.push(init_nfa_state);\r\n      init_nfa_state = new Nst(\r\n        {\r\n          0: [],\r\n          1: []\r\n        },\r\n        [],\r\n        0\r\n      );\r\n      nfa.push(init_nfa_state);\r\n      let b = st[st.length - 1];\r\n      st.pop();\r\n      let a = st[st.length - 1];\r\n      st.pop();\r\n      nfa[nfa_size].e.push(a);\r\n      nfa[nfa_size].e.push(nfa_size + 1);\r\n      nfa[b].e.push(a);\r\n      nfa[b].e.push(nfa_size + 1);\r\n      st.push(nfa_size);\r\n      nfa_size++;\r\n      st.push(nfa_size);\r\n      nfa_size++;\r\n    }\r\n    function postfix_to_nfa(postfix) {\r\n      for (let i = 0; i < postfix.length; i++) {\r\n        switch (postfix[i]) {\r\n          case \"0\":\r\n          case \"1\":\r\n            character(postfix[i] - \"0\");\r\n            break;\r\n          case \"*\":\r\n            kleene_star();\r\n            break;\r\n          case \".\":\r\n            concatenation();\r\n            break;\r\n          case \"+\":\r\n            union_();\r\n            break;\r\n          default:\r\n        }\r\n      }\r\n    }\r\npostfix_to_nfa(regexp_to_postfix(insert_concat(props.regex)));\r\n\r\nlet final_state=st[st.length-1]; st.pop();\r\nlet start_state=st[st.length-1]; st.pop();\r\nnfa[final_state].f=1;\r\n    function Dst(a, f) {\r\n      this.a = a;\r\n      this.f = f;\r\n    }\r\n    let dfa = [];\r\n  \r\n    function epsilon_closure(state, si) {\r\n      for (let i = 0; i < nfa[state].e.length; i++) {\r\n        if (si.has(nfa[state].e[i]) === false) {\r\n          si.add(nfa[state].e[i]);\r\n          epsilon_closure(nfa[state].e[i], si);\r\n        }\r\n      }\r\n    }\r\n  \r\n    function state_change(c, si) {\r\n      const temp = new Set();\r\n      // console.log(si);\r\n      if (c === 1) {\r\n        for (let item of si) {\r\n          for (let j = 0; j < nfa[item].a[0].length; j++) {\r\n            temp.add(nfa[item].a[0][j]);\r\n          }\r\n        }\r\n      } else {\r\n        for (let item of si) {\r\n          for (let j = 0; j < nfa[item].a[1].length; j++) {\r\n            temp.add(nfa[item].a[1][j]);\r\n          }\r\n        }\r\n      }\r\n      return temp;\r\n    }\r\n  \r\n    let isSetsEqual = (a, b) =>\r\n      a.size === b.size && [...a].every((value) => b.has(value));\r\n    function checkSameObjKey(map, key) {\r\n      for (let mapkey of map.keys()) {\r\n        if (isSetsEqual(mapkey, key)) {\r\n          return true;\r\n        }\r\n      }\r\n  \r\n      return false;\r\n    }\r\n    function get(map, key) {\r\n      for (let [mapkey, value] of map.entries()) {\r\n        if (isSetsEqual(mapkey, key)) {\r\n          return value;\r\n        }\r\n      }\r\n    }\r\n    function nfa_to_dfa(si, que, start_state) {\r\n      let mp = new Map();\r\n      let temp = new Set(JSON.parse(JSON.stringify([...si])));\r\n      mp.set(temp, -1);\r\n      let temp1 = new Set();\r\n      let temp2 = new Set();\r\n      let ct = 0;\r\n      si.clear();\r\n      si.add(0);\r\n      // console.log(si);\r\n      epsilon_closure(start_state, si);\r\n      // console.log(si);\r\n      // console.log(temp);\r\n      if (checkSameObjKey(mp, si) === false) {\r\n        // console.log(\"raj\");\r\n        mp.set(si, ct++);\r\n        que.push(si);\r\n      }\r\n      // console.log(mp);\r\n      let p = 0;\r\n      let f1 = false;\r\n  \r\n      // console.log(que.size());\r\n      let flag = 8;\r\n      while (que.length !== 0) {\r\n        let init_dfa_state = new Dst([-1, -1], false);\r\n        dfa.push(init_dfa_state);\r\n        // si.empty();\r\n  \r\n        si = new Set(JSON.parse(JSON.stringify([...que[0]])));\r\n        f1 = false;\r\n        for (let item of si) {\r\n          if (nfa[item].f === 1) f1 = true;\r\n        }\r\n        dfa[p].f = f1;\r\n        // console.log(state_change(1,si));\r\n        temp1 = new Set(JSON.parse(JSON.stringify([...state_change(1, si)])));\r\n        // console.log(temp1);\r\n        si = new Set(JSON.parse(JSON.stringify([...temp1])));\r\n        // console.log(si);\r\n        for (let item of si) {\r\n          epsilon_closure(item, si);\r\n        }\r\n        // if(mp.has(si)==false&&si.size!==0)\r\n        if (checkSameObjKey(mp, si) === false) {\r\n          // mp[si]=ct++;\r\n          mp.set(si, ct++);\r\n          que.push(si);\r\n          dfa[p].a[0] = ct - 1;\r\n        } else {\r\n          let stat = get(mp, si);\r\n          // console.log(\"rajuvava\");\r\n          // console.log(stat);\r\n          dfa[p].a[0] = stat;\r\n        }\r\n        temp1.clear();\r\n  \r\n        si = new Set(JSON.parse(JSON.stringify([...que[0]])));\r\n        temp2 = new Set(JSON.parse(JSON.stringify([...state_change(2, si)])));\r\n        si = new Set(JSON.parse(JSON.stringify([...temp2])));\r\n        for (let item of si) {\r\n          epsilon_closure(item, si);\r\n        }\r\n        if (checkSameObjKey(mp, si) === false) {\r\n          // mp[si]=ct++;\r\n          mp.set(si, ct++);\r\n          que.push(si);\r\n          dfa[p].a[1] = ct - 1;\r\n        } else {\r\n          let stat = get(mp, si);\r\n          dfa[p].a[1] = stat;\r\n        }\r\n        temp2.clear();\r\n        que.shift();\r\n  \r\n        flag--;\r\n        p++;\r\n      }\r\n      for (let i = 0; i < p; i++) {\r\n        if (dfa[i].a[0] === -1) dfa[i].a[0] = p;\r\n        if (dfa[i].a[1] === -1) dfa[i].a[1] = p;\r\n      }\r\n      let init_dfa_state = new Dst([-1, -1], false);\r\n      dfa.push(init_dfa_state);\r\n      dfa[p].a[0] = p;\r\n      dfa[p].a[1] = p;\r\n    }\r\n    /*minimization of dfa-------------------------------------------------------------*/\r\n    let si=new Set();\r\n    let que=[];\r\n    nfa_to_dfa(si,que,start_state);\r\n    console.log(dfa);\r\n    function minimize_dfa(dfa) {\r\n      //cout<<dfa.size()<<endl;\r\n      let grp = [...Array(dfa.length)]; /// Group number for states\r\n      // vector<vector<int> > part(2, vector<int>());   /// Partition for groups\r\n      let part = [[], []];\r\n  \r\n      /// Initializing the groups\r\n      part[0].push(0);\r\n      for (let i = 1; i < grp.length; i++) {\r\n        if (dfa[i].f === dfa[0].f) {\r\n          grp[i] = 0;\r\n          part[0].push(i);\r\n        } else {\r\n          grp[i] = 1;\r\n          part[1].push(i);\r\n        }\r\n      }\r\n  \r\n      // if(!part[1].legth) part.erase(part.end());\r\n  \r\n      /// Loop until no new partition is created\r\n      let chk = true; /// Check if any new partition is created\r\n      let strt = 0; /// Starting State\r\n      while (chk) {\r\n        chk = false;\r\n  \r\n        /*for(int i=0; i<part.size(); i++) {\r\n                cout<<i<<\":\";\r\n                for(int j=0; j<part[i].size(); j++) {\r\n                    cout<<part[i][j]<<\" \";\r\n                } cout<<endl;\r\n            } cout<<endl;*/\r\n        /// Iterate over partitions and alphabets\r\n  \r\n        for (let i = 0; i < part.length; i++) {\r\n          for (let j = 0; j < 2; j++) {\r\n            // vector<pair<int,int> > trans(part[i].size());   /// Transitions for the states of partitions\r\n            let trans = [...Array(part[i].length)];\r\n            /// Iterate over states of partitions and find transition groups\r\n  \r\n            for (let k = 0; k < part[i].length; k++) {\r\n              if (dfa[part[i][k]].a[j] >= 0)\r\n                trans[k] = [grp[dfa[part[i][k]].a[j]], part[i][k]];\r\n              else trans[k] = [-1, part[i][k]];\r\n            }\r\n  \r\n            trans.sort(function (a, b) {\r\n              return a[0] - b[0];\r\n            });\r\n  \r\n            /// Break partition in case of different transitions\r\n            if (trans[0][0] !== trans[trans.length - 1][0]) {\r\n              chk = true;\r\n  \r\n              let k;\r\n              let m = part.length - 1;\r\n  \r\n              part[i].splice(0, part[i].length);\r\n  \r\n              part[i].push(trans[0][1]);\r\n              for (\r\n                k = 1;\r\n                k < trans.length && trans[k][0] === trans[k - 1][0];\r\n                k++\r\n              ) {\r\n                part[i].push(trans[k][1]);\r\n              }\r\n  \r\n              while (k < trans.length) {\r\n                if (trans[k][0] !== trans[k - 1][0]) {\r\n                  part.push([]);\r\n                  m++;\r\n                }\r\n                grp[trans[k][1]] = m;\r\n                part[m].push(trans[k][1]);\r\n                k++;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n  \r\n      for (let i = 0; i < part.length; i++) {\r\n        for (let j = 0; j < part[i].length; j++) {\r\n          if (part[i][j] === 0) strt = i;\r\n        }\r\n      }\r\n  \r\n      // vector<tuple<int,int,bool> > ret(part.size());\r\n      let ret = [...Array(part.length)];\r\n      for (let i = 0; i < part.length; i++) {\r\n        //cout<<grp[part[i][0]]<<endl;\r\n        let astate = dfa[part[i][0]].a[0] >= 0 ? grp[dfa[part[i][0]].a[0]] : -1;\r\n        let bstate = dfa[part[i][0]].a[1] >= 0 ? grp[dfa[part[i][0]].a[1]] : -1;\r\n        let fstate = dfa[part[i][0]].f;\r\n        let temp = {\r\n          a: astate,\r\n          b: bstate,\r\n          final: fstate\r\n        };\r\n        ret[i] = temp;\r\n      }\r\n  \r\n      return [strt, ret];\r\n    }\r\n    function stringcheck(input)\r\n    {   \r\n        let ret=minimize_dfa(dfa);\r\n        let g=ret[1];\r\n        let st_st=ret[0];\r\n        let  curr_state,next_state;\r\n        curr_state=st_st;\r\n        \r\n        for( let i=0;i<input.length;i++){\r\n          \r\n            if(input[i]=='0')\r\n            {\r\n                next_state=g[curr_state].a;\r\n            }\r\n            else\r\n            {\r\n               next_state=g[curr_state].b;\r\n            }\r\n           \r\n            curr_state=next_state;\r\n        }\r\n       \r\n        if(curr_state>=0&&g[curr_state].final===true)\r\n            return true; \r\n        else\r\n            return false;\r\n    }\r\n    let isaccepted=stringcheck(props.string);\r\n    let result;\r\n    if(isaccepted)\r\n    {\r\n        result=(<div style={{background:\"white\",borderRadius:\"5px\", padding:\"5px\" ,width:\"40%\" ,margin:\"auto\",color:\"red\"}}>\r\n                <p>This string accepted by this regular expression</p>\r\n                </div>);\r\n    }\r\n    else\r\n    {\r\n        result=(<div style={{background:\"white\",borderRadius:\"5px\", padding:\"5px\" ,width:\"40%\" ,margin:\"auto\",color:\"green\"}}>\r\n        <p>This string is not accepted by this regular expression</p>\r\n        </div>);\r\n        \r\n    }\r\n\r\n      \r\n    return(\r\n    <div >\r\n          {result}\r\n   </div>)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default Checker;","import React from \"react\";\r\nimport \"./header.css\"\r\nconst Header = () => {\r\n return (\r\n  <div className=\"p-5\" >\r\n      <div className=\"heading p-5\" >\r\n        <h1 className=\"pb-3 text-center\">regular expression visualizer</h1>\r\n        <hr className=\"horizontal-line\"></hr>\r\n        <p className=\"disc\">using this tool you can get the diterminstic finite automata of regular expression and simulate that the given string belongs or not from regular expression</p>\r\n      </div>\r\n  </div>\r\n);\r\n};\r\nexport default Header;","import React,{ useState} from 'react'; \r\nimport BasicFlow from '../componenets/grpah/BasicFlow'\r\nimport Checker from '../componenets/grpah/Checker';\r\nimport Header from '../componenets/header/header'\r\nimport './index.css'\r\nconst Home = () => { \r\n    const [regex, setRegex] = useState(\"\");\r\n    const [string, setString] = useState(\"\");\r\n    const [displayQuestions,setdisplayQuestions]= useState(false);\r\n    const [displayString,setdisplayString]= useState(false);\r\n    const [result,setResult]=useState(\"\");\r\n    const handleSubmitRegex = (evt) => {\r\n        evt.preventDefault();\r\n        setdisplayQuestions(true);\r\n    };\r\n    console.log(regex);\r\n    const handleSubmitString = (evt) => {\r\n        evt.preventDefault();\r\n        setdisplayString(true);\r\n        if (displayQuestions) \r\n        {\r\n        setResult((\r\n           \r\n               <Checker regex={regex} string={string}/>\r\n            ))\r\n        }\r\n        else\r\n        {\r\n            setResult((\r\n                <div style={{background:\"white\",borderRadius:\"5px\", padding:\"5px\" ,width:\"40%\" ,margin:\"auto\",color:\"yellow\"}}>\r\n                   <p>first convert regular expresssion to dfa</p>\r\n                </div>\r\n                )) \r\n        }\r\n \r\n    };\r\n    let graph=\"\";\r\n    if (displayQuestions) \r\n    {\r\n       graph = (\r\n        <div>\r\n            <div style={{background:\"white\",borderRadius:\"5px\", padding:\"5px\" ,width:\"40%\" ,margin:\"auto\",color:\"\"}}>\r\n                   <p>note:-if there is no edge for any character means its self state</p>\r\n                </div>\r\n            <BasicFlow regex={regex}/>\r\n        </div>\r\n        )\r\n   }\r\n   else\r\n   {\r\n     graph = (\r\n        <div className=\"text-center\">\r\n            <p>here graph will draw</p>\r\n            \r\n        </div>\r\n        )\r\n   }\r\n    \r\n  return ( \r\n     \r\n      <div className=\"main-container-home\">\r\n      <Header/>      \r\n       \r\n            <div className=\"row \">\r\n                <div className=\"col-12 col-md-7\">\r\n                    <div className=\"p-3\">\r\n                         <div className=\"input-box input-box-reg bg-white\">\r\n                            <p>Enter the regular expression </p>\r\n                            <p>Note:- regex expression should be fromat like ex.(110+11),1110*11+11,(11+110*11*+11)</p>\r\n                            <form onSubmit={handleSubmitRegex}>\r\n                            <label>\r\n                                Regular Expression:\r\n                            </label>\r\n                            <br></br>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={regex}\r\n                                onChange={e => {setRegex(e.target.value)}}\r\n                                style={{width:\"80%\"}}\r\n                        \r\n                                />\r\n                                <br></br>\r\n                            <input type=\"submit\" value=\"Convert\" />\r\n                        </form>\r\n                       \r\n                    </div>\r\n                 </div>\r\n                </div>\r\n                <div class=\"col-12 col-md-5\">\r\n                <div className=\"p-3\">\r\n                <div className=\"input-box bg-white\">\r\n                    <p>Enter the string to check if it belongs to the given regular expression</p>\r\n                    <p>Note:- string should be fromat like ex. 11011,11101111,1111100111</p>\r\n                    <form onSubmit={handleSubmitString}>\r\n                            <label >\r\n                                String:\r\n                            </label>\r\n                            <br></br>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={string}\r\n                                onChange={e => {setString(e.target.value)}}\r\n                                style={{width:\"80%\"}}\r\n                        \r\n                                />\r\n                                <br></br>\r\n                            <input  type=\"submit\" value=\"Check\" />\r\n                        </form>\r\n                        \r\n                    </div>\r\n                 </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"text-center\"> \r\n                {result} \r\n            </div>\r\n           \r\n              <div className=\"p-3\">\r\n                  <div className=\"graph-box\">\r\n                   {graph}\r\n                 </div>\r\n            </div>\r\n      \r\n      </div>\r\n  ); \r\n}; \r\n  \r\nexport default Home;","import { makeStyles } from '@material-ui/styles';\n\nconst AboutStyles = makeStyles((theme) => ({\n\ttitle: {\n\t\ttextAlign: \"center\",\n\t// \tcolor: theme.palette.secondary.dark\n\t},\n\tsubTitle: {\n    fontWeight: \"600\"\n\t},\n\tsubTitleSmall: {\n\t\tfontWeight: \"600\"\n\t},\n\tpicSpacing: {\n\t\theight: \"100%\",\n\t\tdisplay: \"flex\",\n\t\talignItems: \"center\"\n\t},\n\tprofilePic: {\n\t\ttransition: \"0.3s\",\n\t\twidth: \"80%\",\n\t\theight: \"auto\",\n\t\t\"&:hover\": {\n\t\t\ttransition: \"0.3s\",\n\t\t\tboxShadow: \"0 6px 12px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)\"\n\t\t}\n\t},\n\tskills: {\n\t\tdisplay: \"inline-block\",\n\t\t\"&:hover\": {\n\t\t\ttransition: \"0.3s\",\n\t\t\tcolor: \"#b5befa\"\n\t\t}\n\t},\n\tbutton: {\n\t\t// backgroundColor: theme.palette.secondary.dark,\n\t\tborderRadius: 20,\n\t\tcolor: \"#ffffff\",\n\t\tmarginRight: \"2%\",\n\t\ttextTransform: \"none\",\n\t\twidth: \"30%\",\n\t\theight: \"auto\",\n\t\t\"&:hover\": {\n\t\t\ttransition: \"0.3s\",\n\t\t\tcolor: \"#000000\",\n\t\t\tbackgroundColor: \"#EDF1FA\",\n\t\t}\n\t},\n\tbuttonMobile: {\n\t\t// backgroundColor: theme.palette.secondary.dark,\n\t\tborderRadius: 20,\n\t\tcolor: \"#ffffff\",\n\t\tmarginRight: \"2%\",\n\t\ttextTransform: \"none\",\n\t\twidth: \"42%\",\n\t\theight: \"auto\",\n\t\t\"&:hover\": {\n\t\t\ttransition: \"0.3s\",\n\t\t\tcolor: \"#000000\",\n\t\t\tbackgroundColor: \"#EDF1FA\",\n\t\t}\n\t},\n\tlinks: {\n\t\ttextDecoration: \"none\"\n\t}\n}))\n\nexport default AboutStyles;","// dependancies\nimport React from 'react'\nimport { Grid, Typography, Divider } from '@material-ui/core'\nimport { FaGithub, FaLinkedin, FaPhone } from 'react-icons/fa'\nimport { MdEmail } from 'react-icons/md'\n// file imports\nimport AboutStyles from './AboutStyles'\n\nconst About = () => {\n\t// classes and queries\n\tconst classes = AboutStyles();\n\treturn (\n\t\t<Grid id=\"about\" container>\n\t\t\t{/* Title */}\n\t\t\t<Grid className={classes.title} item xs={12}>\n\t\t\t\t<br />\n\t\t\t\t<Typography variant=\"h4\">Curious To Know  Me </Typography>\n\t\t\t\t<br /><br />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}></Grid>\n\t\t\t\n\n\t\t\t{/* Text */}\n\t\t\t<Grid item xs={10} md={5}>\n\t\t\t\t<br />\n\t\t\t\t<Typography variant=\"h6\" className={classes.subTitle} display=\"inline\">My name is Rajendra kumar and I am a Computer Science and Engineering student at IIT tirupati</Typography>\n\t\t\t\t<div style={{ paddingBottom: \"2%\" }} />\n\t\t\t\t<Typography variant=\"body1\">\n\t\t\t\t    Currently, I am exploring the computer science field. Logical problem solving has always appealed to me and this explains my interests in mathematics, programming and computing in general. \n\t\t\t\t    Previously, I have worked on various web development projects\n                    and continousely i am developing more tools which help in real life of human. Some on my hobbies are playing sports,\n                    farming and exploring different games.\n\t\t\t\t</Typography>\n\t\t\t\t<br />\n\t\t\t\t<Divider />\n\t\t\t\t<br />\n             \n\t\t\t\t\n\t\t\t</Grid>\n\t\t\n\t\t\t\n\t\t\t\t<Grid item xs={1}></Grid>\n\t\t\t   <Grid item xs={10} md={5}>\n\t\t\t\t<Typography variant=\"h4\"><b>Get in Touch!</b></Typography>\n\t\t\t\t<Divider></Divider>\n\t\t\t\t<br />\n\t\t\t\t<MdEmail />&nbsp;\n\t\t\t\t<Typography display=\"inline\"><b> Email:</b></Typography>\n\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" className={classes.contact} href=\"mailto:cs19b034@iittp.ac.in\">\n\t\t\t\t\t<Typography display=\"inline\">cs19b034@iittp.ac.in</Typography>\n\t\t\t\t</a>\n\t\t\t\t<div /><br />\n\t\t\t\t<FaPhone />&nbsp;\n\t\t\t\t<Typography display=\"inline\"><b> Phone:</b></Typography>\n\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" className={classes.contact} href=\"+919772694734\">\n\t\t\t\t\t<Typography className={classes.contact}  display=\"inline\">+919772694734</Typography>\n\t\t\t\t</a>\n\t\t\t\t<div /><br />\n\t\t\t\t<FaGithub />&nbsp;\n\t\t\t\t<Typography display=\"inline\"><b> Github:</b></Typography>\n\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" className={classes.contact} href=\"https://github.com/raj2770\">\n\t\t\t\t\t<Typography  display=\"inline\"> github.com/raj2770</Typography>\n\t\t\t\t</a>\n\t\t\t\t<div /><br />\n\t\t\t\t<FaLinkedin />&nbsp;\n\t\t\t\t<Typography display=\"inline\"><b> LinkedIn:</b></Typography>\n\t\t\t\t<a rel=\"noopener noreferrer\" target=\"_blank\" className={classes.contact} href=\"https://www.linkedin.com/in/rajendra-kumar-3313211a0/\">\n\t\t\t\t\t<Typography  display=\"inline\"> linkedin.com/in/rajendrakumar</Typography>\n\t\t\t\t</a>\n\t\t\t\t<br /><br /><br />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}></Grid>\n\t\t\n\t\t\t<Grid item xs={12}>\n\t\t\t\t<div style={{ paddingBottom: \"7%\" }} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t)\n}\n\nexport default About;","import React from 'react';\r\nimport {Navbar,Nav,Container} from \"react-bootstrap\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n    return(\r\n\t\t<Navbar bg=\"dark\" expand=\"lg\" style={{background:\"linear-gradient(180deg,#8f79f5,#4a2ec7) \",padding:\"20px\"}}>\r\n\t\t\t<Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\t\t\t<Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\t\t\t\t<Nav className=\"m-auto\">\r\n\t\t\t\t<Nav.Link style={{paddingRight:\"60px\" ,color:\"white\",fontSize:\"20px\"}} href=\"/\">Home</Nav.Link>\r\n\t\t\t\t<Nav.Link style={{paddingRight:\"60px\" ,color:\"white\",fontSize:\"20px\"} }href=\"/examples\">Examples</Nav.Link>\r\n\t\t\t\t<Nav.Link style={{paddingRight:\"60px\" ,color:\"white\",fontSize:\"20px\"}} href=\"/about\">About</Nav.Link>\r\n\t\t\t\t\r\n\t\t\t\t</Nav>\r\n\t\t\t\t\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>)\r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \nimport Home from './pages/index'; \nimport About from './pages/about/About.jsx'; \nimport \"./styles.css\";\nimport Navbar from \"./componenets/navbar/Navbar\";\n\n function App() {\n  return ( \n      <Router> \n        <Navbar/>\n        <Switch> \n        <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About/>\n          </Route>\n        </Switch>\n      </Router> \n    ); \n}\nexport default App; ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}